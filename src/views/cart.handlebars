<!DOCTYPE html>
<html>
<head>
    <title>Carrito de Compras</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h1>Carrito de Compras</h1>
        
        {{#if cart.products.length}}
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Precio</th>
                        <th>Cantidad</th>
                        <th>Subtotal</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each cart.products}}
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                {{#if this.product.thumbnails.[0]}}
                                <img src="{{this.product.thumbnails.[0]}}" alt="{{this.product.title}}" style="width: 50px; height: 50px; object-fit: cover; margin-right: 10px;">
                                {{/if}}
                                <div>
                                    <h6 class="mb-0">{{this.product.title}}</h6>
                                    <small class="text-muted">{{this.product.code}}</small>
                                </div>
                            </div>
                        </td>
                        <td>${{this.product.price}}</td>
                        <td>
                            <div class="input-group" style="width: 120px;">
                                <button class="btn btn-outline-secondary decrease-quantity" type="button" data-product-id="{{this.product._id}}">-</button>
                                <input type="number" class="form-control text-center quantity-input" value="{{this.quantity}}" min="1" data-product-id="{{this.product._id}}">
                                <button class="btn btn-outline-secondary increase-quantity" type="button" data-product-id="{{this.product._id}}">+</button>
                            </div>
                        </td>
                        <td>${{multiply this.product.price this.quantity}}</td>
                        <td>
                            <button class="btn btn-danger btn-sm remove-product" data-product-id="{{this.product._id}}">
                                Eliminar
                            </button>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-end"><strong>Total:</strong></td>
                        <td><strong>${{cartTotal cart.products}}</strong></td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="d-flex justify-content-between mt-4">
            <button class="btn btn-danger" id="clear-cart">Vaciar Carrito</button>
            <button class="btn btn-primary" id="checkout">Proceder al Pago</button>
        </div>
        {{else}}
        <div class="text-center my-5">
            <h3>Tu carrito está vacío</h3>
            <p>¿Por qué no agregas algunos productos?</p>
            <a href="/products" class="btn btn-primary">Ver Productos</a>
        </div>
        {{/if}}
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const cartId = '{{cart._id}}';

        // Actualizar cantidad
        async function updateQuantity(productId, quantity) {
            try {
                const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ quantity })
                });

                if (!response.ok) throw new Error('Error al actualizar cantidad');
                location.reload();
            } catch (error) {
                alert('Error al actualizar la cantidad');
                console.error(error);
            }
        }

        // Eliminar producto
        async function removeProduct(productId) {
            try {
                const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) throw new Error('Error al eliminar producto');
                location.reload();
            } catch (error) {
                alert('Error al eliminar el producto');
                console.error(error);
            }
        }

        // Vaciar carrito
        document.getElementById('clear-cart')?.addEventListener('click', async () => {
            if (!confirm('¿Estás seguro de que quieres vaciar el carrito?')) return;
            
            try {
                const response = await fetch(`/api/carts/${cartId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) throw new Error('Error al vaciar carrito');
                location.reload();
            } catch (error) {
                alert('Error al vaciar el carrito');
                console.error(error);
            }
        });

        // Eventos de cantidad
        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('change', e => {
                const quantity = parseInt(e.target.value);
                const productId = e.target.dataset.productId;
                if (quantity > 0) {
                    updateQuantity(productId, quantity);
                }
            });
        });

        document.querySelectorAll('.increase-quantity').forEach(button => {
            button.addEventListener('click', e => {
                const productId = e.target.dataset.productId;
                const input = document.querySelector(`.quantity-input[data-product-id="${productId}"]`);
                const quantity = parseInt(input.value) + 1;
                updateQuantity(productId, quantity);
            });
        });

        document.querySelectorAll('.decrease-quantity').forEach(button => {
            button.addEventListener('click', e => {
                const productId = e.target.dataset.productId;
                const input = document.querySelector(`.quantity-input[data-product-id="${productId}"]`);
                const quantity = parseInt(input.value) - 1;
                if (quantity > 0) {
                    updateQuantity(productId, quantity);
                }
            });
        });

        document.querySelectorAll('.remove-product').forEach(button => {
            button.addEventListener('click', e => {
                const productId = e.target.dataset.productId;
                if (confirm('¿Estás seguro de que quieres eliminar este producto?')) {
                    removeProduct(productId);
                }
            });
        });
    </script>
</body>
</html> 